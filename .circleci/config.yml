jobs:
  build:
    machine:
      image: ubuntu-2004:current
    resource_class: arm.large
    environment:
      TERMUX_PREFIX: /data/data/com.termux/files/usr
      TERMUX_HOME: /data/data/com.termux/files/home
      PIP_DISABLE_PIP_VERSION_CHECK: 1
    steps:
      - run:
          name: get termux
          command: |
            mkdir -p archives; cd archives
            wget -nv https://github.com/kawanakaiku/test-ci/releases/download/chroot-termux/termux-aarch64.tar.xz
      - run:
          name: extract termux
          command: |
            mkdir termux-root
            for tar_xz in archives/*.tar.xz; do
              tar xf "${tar_xz}" -C termux-root
            done
      - run:
          name: chroot termux
          command: |
            cd termux-root
            
            mkdir -p proc dev dev/pts sys
            sudo mount -t proc proc proc
            sudo mount -t devtmpfs udev dev
            sudo mount -t devpts devpts dev/pts
            sudo mount -t sysfs sysfs sys
            
            # set host file
            mkdir -p system/etc
            for host in pypi.python.org files.pythonhosted.org pypi.org \
              github.com objects.githubusercontent.com codeload.github.com \
              packages.termux.dev \
              registry.yarnpkg.com nodejs.org registry.npmjs.org \
              electronjs.org www.electronjs.org artifacts.electronjs.org \
              archive.ubuntu.com launchpad.net launchpadlibrarian.net librarian.launchpad.netã€€\
              cpan.org \
              crates.io static.crates.io
            do
              echo $( nslookup $host | awk '/^Address: / { print $2; exit }' ) " $host" >> system/etc/hosts
            done
            
            # suppress linker: Warning: failed to find generated linker configuration from "/linkerconfig/ld.config.txt"
            mkdir -p linkerconfig
            touch linkerconfig/ld.config.txt
            
            TERMUX_USER=$( sudo chroot . /system/bin/stat -c '%U' ${TERMUX_PREFIX}/bin/env )
            TERMUX_GROUP=$( sudo chroot . /system/bin/stat -c '%G' ${TERMUX_PREFIX}/bin/env )
          
            cat <<SH > /tmp/chroot
            #!/usr/bin/sh
            exec sudo chroot ${PWD} \
              ${TERMUX_PREFIX}/bin/su ${TERMUX_USER} \
              ${TERMUX_PREFIX}/bin/env \
              PATH=${TERMUX_PREFIX}/bin \
              HOME=${TERMUX_HOME} \
              PREFIX=${TERMUX_PREFIX} \
              TMPDIR=${TERMUX_PREFIX}/tmp \
              LANG=en_US.UTF-8 \
              LD_LIBRARY_PATH=/apex/com.android.i18n/lib64 \
              HTTP_PROXY=127.0.0.1:3128 \
              HTTPS_PROXY=127.0.0.1:3128 \
              FTP_PROXY=127.0.0.1:3128 \
              PIP_DISABLE_PIP_VERSION_CHECK=1 \
              "\$@"
            SH
            chmod +x /tmp/chroot
      - run:
          name: termux apt
          command: |
            exit
            /tmp/chroot bash <<BASH
            apt-get update
            apt-get upgrade -y build-essential jq termux-exec python gnupg file git wget curl ndk-sysroot ninja nodejs rust
            BASH
      - run:
          name: clone
          command: |
            git clone --depth=1 --branch=kawanakaiku-code-server https://github.com/kawanakaiku/termux-packages.git termux-root/termux-packages
      - run:
          name: build
          command: |
            timeout --kill-after=0 --signal=SIGINT 50m /tmp/chroot bash <<CHROOT || true
            squid
            cd /termux-packages
            export LD_PRELOAD=\${PREFIX}/lib/libtermux-exec.so
            
            # /data/data/com.termux/files/usr/include/linux/types.h:21:10: fatal error: 'asm/types.h' file not found
            #ln -sf /data/data/com.termux/files/usr/include/aarch64-linux-android/asm /data/data/com.termux/files/usr/include
            
            # log
            _BIN=\${PREFIX}/_bin
            mkdir -p \$_BIN
            PATH="\$_BIN:\$PATH"
            for C in {,aarch64-linux-android-}{ar,clang,clang++,cpp,g++,gcc,ld,nm,objdump,ranlib,readelf,strip} node; do
              echo "#!${TERMUX_PREFIX}/bin/sh" > \${_BIN}/\${C}
              echo "echo \"\$C \\\$*\" >>/build.log" >> \${_BIN}/\${C}
              echo "exec ${TERMUX_PREFIX}/bin/\${C} \"\\\$@\"" >> \${_BIN}/\${C}
              chmod +x \${_BIN}/\${C}
            done
            
            bash ./build-package.sh -I code-server
            #bash ./build-package.sh -I libpeas midori
            #bash ./build-package.sh -I thundirbird
            CHROOT
      - run:
          name: archive build
          command: |
            tar cf build.tar termux-root/termux-packages/output termux-root/build.log
      - run:
          name: save artifact
          command: |
            curl -X POST http://${MY_HOST}/upload -F files=@build.tar
