name: android-pytorch-example

on:
    push:
      branches: [ main ]
      paths:
        - '.github/workflows/android-pytorch-example.yml'
    workflow_dispatch:
 
jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
      - name: clone
        run: |
          git clone https://github.com/pytorch/android-demo-app.git .

      - name: build
        run: |
          mkdir build
        
          for gradle in */build.gradle ; do
          
            # sed -i -E 's@(com\.android\.tools\.build:gradle:)[0-9\.]+@\17.2.1@g' ${gradle}
            continue
            
          done
          
          for abi in ${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/*/*-linux-android* ; do
          
            ln -s ${abi} ${ANDROID_NDK_ROOT}/toolchains
          
          done

          for gradlew in */gradlew ; do
          
            app=$(dirname ${gradlew})
          
            pushd ${app}

            ./gradlew assembleRelease || true
            
            # find . -name "*.apk" -print0 | xargs -0 -I@ cp --verbose @ ../build/${app}.apk

            popd
            
          done
          
          # put key
          echo "${{ secrets.KEY_JKS_BASE64 }}" | base64 -d > ${HOME}/key.jks
          
          apksigner=$(ls ${ANDROID_SDK_ROOT}/build-tools/*/apksigner | tail -1)
          zipalign=$(ls ${ANDROID_SDK_ROOT}/build-tools/*/zipalign | tail -1)
          
          for apk in */app/build/outputs/apk/release/app-release-unsigned.apk ; do
          
            app=$(dirname ${gradlew})
          
            ${apksigner} sign --ks ${HOME}/key.jks -v --v2-signing-enabled true --ks-key-alias key --ks-pass pass:${{ secrets.PASSWORD }} ${apk}

            ${zipalign} -f -v 4 ${apk} build/${app}.apk
          
          done
          
      - name: Store built file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
