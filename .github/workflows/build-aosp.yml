name: build-aosp

on:
    push:
      branches: [ main ]
      paths:
        - '.github/workflows/build-aosp.yml'
    workflow_dispatch:
 
jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      aosp_version: android-12.1.0_r27
      aosp_target: aosp_arm64-eng
  
    steps:
      - name: free space
        run: |
            set -o noglob
            sudo apt purge --auto-remove \
                ant \
                apport \
                clang-* \
                dotnet-* \
                google-* \
                libllvm-* \
                man-db \
                mongodb-* \
                mono-* \
                monodoc-* \
                mysql-* \
                php* \
                postgresql-* \
                powershell \
                python2* \
                ruby* \
                snapd \
                sqlite3 \
                tex-* \
                vim-* \
                x11* \
                *-theme \
                *-icon-*
            set +o noglob
            
            sudo rm -rf \
                /usr/local \
                /usr/local/lib/node_modules \
                /usr/local/lib/heroku \
                /usr/local/.ghcup \
                /usr/local/share/powershell \
                /usr/local/share/chromium \
                /usr/share/dotnet \
                /usr/share/swift \
                /usr/share/miniconda \
                /usr/share/az_* \
                /usr/share/gradle-* \
                /usr/share/miniconda \
                /usr/share/man \
                /usr/share/doc \
                /usr/share/kotlinc \
                /usr/share/icons \
                /usr/share/sbt \
                /usr/share/locale \
                /usr/lib/jvm \
                /usr/lib/google-cloud-sdk \
                /usr/lib/mono \
                /usr/lib/firefox \
                /usr/lib/mysql \
                /usr/lib/modules \
                /usr/src \
                /usr/include \
                /opt \
                /var/lib/docker \
                /var/lib/mysql \
                /var/lib/gems \
                /var/lib/waagent \
                /home/{runner,runneradmin}/.{rustup,cargo,dotnet} \
                /home/linuxbrew \
                /home/runner/runners/*.tgz \
                /home/runner/runners/2.296.1 \
                /etc/skel \
                /root/.sbt
            
            sudo pkill -9 mono
            sudo pkill -9 dockerd
            sudo pkill -9 containerd

      - name: get requirements
        run: |
          sudo apt -y install curl make zip unzip \
            git python default-jre openjdk-8-jdk \
            bison g++-multilib gcc-multilib libxml2-utils

          curl https://storage.googleapis.com/git-repo-downloads/repo | sudo tee /bin/repo >/dev/null
          sudo chmod +x /bin/repo
          
      - name: mount bind
        run: |
          sudo mkdir /mnt/bind
          sudo chmod 777 /mnt/bind
          for i in {clang}; do
            mkdir -p /mnt/bind/$i prebuilts/$i
            sudo mount --bind /mnt/bind/$i prebuilts/$i
          done
                
      - name: get storage info
        run: |
            free -h
            df -h
          
      - name: clone
        run: |
          repo init -u https://android.googlesource.com/platform/manifest -b ${aosp_version} --depth=1
          
          # disable cloning darwin
          # may reduce for 10GB
          sed -i -e '/darwin-x86/d' .repo/manifests/default.xml
          sed -i -e '/linux-x86\/[host|x86]/d' .repo/manifests/default.xml
          sed -i -e '/platform\/test/d' .repo/manifests/default.xml
          sed -i -e '/platform\/hardware/d' -e '/hardware\/qcom/d' .repo/manifests/default.xml
          
          repo sync -c -j8
          
          rm -rf .repo
                
      - name: get storage info
        run: |
            free -h
            df -h
          
      - name: patch
        run: |
          # enable /etc/resolv.conf
          sed -i -e 's|/etc/ppp/resolv.conf|/etc/resolv.conf|' bionic/libc/dns/include/resolv_private.h
          sed -i -e 's|ifndef ANDROID_CHANGES|ifndef __NOT_REALLY_DEFINED__|' bionic/libc/dns/resolv/res_init.c
          
          # error: build/soong/Android.bp:49:1: "libwinpthread" depends on undefined module "mingw-libwinpthread-notice"
          # 15:59:24 soong bootstrap failed with: exit status 1
          sed -i -e '/mingw-libwinpthread-notice/d' build/soong/Android.bp
          
      - name: build
        run: |
          export LC_ALL=C
          source build/envsetup.sh
          lunch ${aosp_target}
          
          # soong bootstrap failed with: exit status 1
          # https://stackoverflow.com/questions/58894290/android-opensource-project-build-error-failed-out-soong-build-ninja
          make -j1
          
      - name: archive built files
        run: |
          XZ_OPT=-e9 tar -Jcf ${{ env.aosp_version }}_${{ env.aosp_target }}.tar.xz out
          
      - name: Store built file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.aosp_version }}_${{ env.aosp_target }}
          path: |
            ${{ env.aosp_version }}_${{ env.aosp_target }}.tar.xz
