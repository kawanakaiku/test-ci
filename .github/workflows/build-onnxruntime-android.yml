name: build-onnxruntime-android

on:
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/build-onnxruntime-android.yml"
  workflow_dispatch:

env:
  ONNX_VERSION: "1.14.1"
  ARCH: "aarch64"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get source code
        run: |
          git clone --depth=1 --recurse-submodules --branch=v${ONNX_VERSION} https://github.com/microsoft/onnxruntime ${GITHUB_WORKSPACE}/src
      - uses: actions/cache@v3
        id: cache-protoc
        with:
          path: ${{ github.workspace }}/host-protoc
          key: onnx_protoc_${{ env.ONNX_VERSION }}
      - uses: seanmiddleditch/gha-setup-ninja@master
      - if: ${{ steps.cache-protoc.outputs.cache-hit != 'true' }}
        name: Build Host Protoc
        run: |
          mkdir ${GITHUB_WORKSPACE}/host-{protoc,build}
          cd ${GITHUB_WORKSPACE}/host-build
          cmake -GNinja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/host-protoc \
            -Dprotobuf_BUILD_TESTS=OFF \
            -Dprotobuf_WITH_ZLIB_DEFAULT=OFF \
            -Dprotobuf_BUILD_SHARED_LIBS=OFF \
            ${GITHUB_WORKSPACE}/src/cmake/external/protobuf/cmake
          ninja
          ninja install
      - name: Build Onnxruntime
        run: |
          mkdir ${GITHUB_WORKSPACE}/build
          cd ${GITHUB_WORKSPACE}/build
          ln -sf ${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/${ARCH}-linux-android-{clang,gcc}
          ln -sf ${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/${ARCH}-linux-android-{clang++,g++}
          cmake -GNinja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CROSSCOMPILING=True \
            -DCMAKE_LINKER=${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/ld.lld \
            -DCMAKE_SYSTEM_NAME=Android \
            -DCMAKE_SYSTEM_VERSION=24 \
            -DCMAKE_SYSTEM_PROCESSOR=${ARCH} \
            -DCMAKE_ANDROID_TOOL_C_COMPILER=${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64/bin/${ARCH}-linux-android-clang \
            -DCMAKE_ANDROID_STANDALONE_TOOLCHAIN=${ANDROID_NDK}/toolchains/llvm/prebuilt/linux-x86_64 \
            -DCMAKE_MAKE_PROGRAM=ninja \
            -DONNX_CUSTOM_PROTOC_EXECUTABLE=${GITHUB_WORKSPACE}/host-protoc/bin/protoc \
            -Donnxruntime_RUN_ONNX_TESTS=OFF \
            -Donnxruntime_GENERATE_TEST_REPORTS=OFF \
            -Donnxruntime_USE_MIMALLOC=OFF \
            -Donnxruntime_ENABLE_PYTHON=OFF \
            -Donnxruntime_BUILD_CSHARP=OFF \
            -Donnxruntime_BUILD_JAVA=OFF \
            -Donnxruntime_BUILD_NODEJS=OFF \
            -Donnxruntime_BUILD_OBJC=OFF \
            -Donnxruntime_BUILD_SHARED_LIB=ON \
            -Donnxruntime_BUILD_APPLE_FRAMEWORK=OFF \
            -Donnxruntime_USE_DNNL=OFF \
            -Donnxruntime_USE_NNAPI_BUILTIN=OFF \
            -Donnxruntime_USE_RKNPU=OFF \
            -Donnxruntime_USE_LLVM=OFF \
            -Donnxruntime_ENABLE_MICROSOFT_INTERNAL=OFF \
            -Donnxruntime_USE_VITISAI=OFF \
            -Donnxruntime_USE_TENSORRT=OFF \
            -Donnxruntime_SKIP_AND_PERFORM_FILTERED_TENSORRT_TESTS=ON \
            -Donnxruntime_USE_TENSORRT_BUILTIN_PARSER=OFF \
            -Donnxruntime_TENSORRT_PLACEHOLDER_BUILDER=OFF \
            -Donnxruntime_USE_TVM=OFF \
            -Donnxruntime_TVM_CUDA_RUNTIME=OFF \
            -Donnxruntime_TVM_USE_HASH=OFF \
            -Donnxruntime_USE_MIGRAPHX=OFF \
            -Donnxruntime_CROSS_COMPILING=OFF \
            -Donnxruntime_DISABLE_CONTRIB_OPS=OFF \
            -Donnxruntime_DISABLE_ML_OPS=OFF \
            -Donnxruntime_DISABLE_RTTI=OFF \
            -Donnxruntime_DISABLE_EXCEPTIONS=OFF \
            -Donnxruntime_MINIMAL_BUILD=OFF \
            -Donnxruntime_EXTENDED_MINIMAL_BUILD=OFF \
            -Donnxruntime_MINIMAL_BUILD_CUSTOM_OPS=OFF \
            -Donnxruntime_REDUCED_OPS_BUILD=OFF \
            -Donnxruntime_ENABLE_LANGUAGE_INTEROP_OPS=OFF \
            -Donnxruntime_USE_DML=OFF \
            -Donnxruntime_USE_WINML=OFF \
            -Donnxruntime_BUILD_MS_EXPERIMENTAL_OPS=OFF \
            -Donnxruntime_USE_TELEMETRY=OFF \
            -Donnxruntime_ENABLE_LTO=OFF \
            -Donnxruntime_USE_ACL=OFF \
            -Donnxruntime_USE_ACL_1902=OFF \
            -Donnxruntime_USE_ACL_1905=OFF \
            -Donnxruntime_USE_ACL_1908=OFF \
            -Donnxruntime_USE_ACL_2002=OFF \
            -Donnxruntime_USE_ARMNN=OFF \
            -Donnxruntime_ARMNN_RELU_USE_CPU=ON \
            -Donnxruntime_ARMNN_BN_USE_CPU=ON \
            -Donnxruntime_ENABLE_NVTX_PROFILE=OFF \
            -Donnxruntime_ENABLE_TRAINING=OFF \
            -Donnxruntime_ENABLE_TRAINING_OPS=OFF \
            -Donnxruntime_ENABLE_TRAINING_APIS=OFF \
            -Donnxruntime_ENABLE_CPU_FP16_OPS=OFF \
            -Donnxruntime_USE_NCCL=OFF \
            -Donnxruntime_BUILD_BENCHMARKS=OFF \
            -Donnxruntime_USE_ROCM=OFF \
            -DOnnxruntime_GCOV_COVERAGE=OFF \
            -Donnxruntime_USE_MPI=ON \
            -Donnxruntime_ENABLE_MEMORY_PROFILE=OFF \
            -Donnxruntime_ENABLE_CUDA_LINE_NUMBER_INFO=OFF \
            -Donnxruntime_BUILD_WEBASSEMBLY=OFF \
            -Donnxruntime_BUILD_WEBASSEMBLY_STATIC_LIB=OFF \
            -Donnxruntime_ENABLE_WEBASSEMBLY_EXCEPTION_CATCHING=ON \
            -Donnxruntime_ENABLE_WEBASSEMBLY_API_EXCEPTION_CATCHING=OFF \
            -Donnxruntime_ENABLE_WEBASSEMBLY_EXCEPTION_THROWING=ON \
            -Donnxruntime_ENABLE_WEBASSEMBLY_THREADS=OFF \
            -Donnxruntime_ENABLE_WEBASSEMBLY_DEBUG_INFO=OFF \
            -Donnxruntime_ENABLE_WEBASSEMBLY_PROFILING=OFF \
            -Donnxruntime_ENABLE_EAGER_MODE=OFF \
            -Donnxruntime_ENABLE_LAZY_TENSOR=OFF \
            -Donnxruntime_ENABLE_EXTERNAL_CUSTOM_OP_SCHEMAS=OFF \
            -Donnxruntime_ENABLE_CUDA_PROFILING=OFF \
            -Donnxruntime_ENABLE_ROCM_PROFILING=OFF \
            -Donnxruntime_USE_XNNPACK=OFF \
            -Donnxruntime_USE_CANN=OFF \
            -Donnxruntime_BUILD_UNIT_TESTS=OFF \
            -Donnxruntime_BUILD_WINML_TESTS=OFF \
            ${GITHUB_WORKSPACE}/src/cmake
          ninja
      - name: Store Artifact
        run: |
          find ${GITHUB_WORKSPACE}/build -name "*.so*"
