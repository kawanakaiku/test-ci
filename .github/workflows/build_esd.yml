name: build_esd

on:
  push:
    branches: [ main ]
    paths:
      - 'build_esd/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v3
      
      - name: Download source
        shell: bash
        run: |
          test -f install.wim && exit || true
          
          python.exe -u <<'PYTHON'
          from urllib.request import urlopen
          with open('install.wim', 'wb') as f:
            for i in ['aa', 'ab', 'ac', 'ad', 'ae']:
              url = 'https://github.com/kawanakaiku/test-ci/releases/download/win10/Win10_21H2_Japanese_x64.wim_'+i
              print(url)
              part = urlopen(url).read()
              f.write(part)
          PYTHON
          
      - name: Mount wim
        shell: bash
        run: |
          mkdir -p mnt_wim
          Dism.exe -Mount-image -imagefile:"install.wim" -Index:1 -MountDir:'mnt_wim' -LogPath:"01-mount.log"
          
      - name: Register drive
        run: |
          subst.exe E: mnt_wim
          
      - name: Update
        shell: bash
        run: |
          exit 0
          
          python.exe -u <<PYTHON
          from urllib.request import urlretrieve

          ### install updates
          package_url_list = []

          # 2022-06x64 ベース システム用 Windows 10 Version 21H2 の累積更新プログラム (KB5014666)
          # package_url_list += ['https://catalog.s.download.windowsupdate.com/c/msdownload/update/software/updt/2022/06/windows10.0-kb5014666-x64_25099fa863a0479051f049e6908473f1c0526258.msu']

          # NET Framework 3.5 および 4.8 の累積的な更新プログラム (x64 向け Windows 10 Version 21H2 用) (KB5013887)
          package_url_list += ['https://catalog.s.download.windowsupdate.com/d/msdownload/update/software/updt/2022/04/windows10.0-kb5013887-x64-ndp48_cee9944aef2e07c7ca85b5ca1d9d67ecdf7a9abf.msu']

          for package_url in package_url_list:
            print(package_url)
            package_file = package_url.rsplit('/', 1)[-1]
            urlretrieve(package_url, package_file)
          PYTHON
            
          Dism.exe -Image:'E:\' -LogPath:"02-update.log" -Add-Package `for msu in *.msu ; do printf " -PackagePath=${msu}" ; done`

      - name: Optimize
        shell: powershell
        run: |
          exit
          
          ### precompile
          $HOMEDRIVE = 'E:'
          $mountdir = $HOMEDRIVE + '\'
          
          cd $mountdir

          $env:ALLUSERSPROFILE = $mountdir + 'ProgramData'
          $env:CommonProgramFiles = $mountdir + 'Program Files\Common Files'
          ${env:CommonProgramFiles(x86)} = $mountdir + 'Program Files (x86)\Common Files'
          $env:CommonProgramW6432 = $mountdir + 'Program Files\Common Files'
          $env:HOMEDRIVE = $HOMEDRIVE
          $env:ProgramData = $mountdir + 'ProgramData'
          $env:ProgramFiles = $mountdir + 'Program Files'
          ${env:ProgramFiles(x86)} = $mountdir + 'Program Files (x86)'
          $env:ProgramW6432 = $mountdir + 'Program Files'
          $env:SYSTEMDRIVE = $HOMEDRIVE
          $env:SystemRoot = $mountdir + 'Windows'
          $env:windir = $mountdir + 'windows'
          
          $env:PATH = ''

          $ngen_exe_list = ( Resolve-Path ( $env:SystemRoot + "\Microsoft.NET\Framework*\*\ngen.exe" ) | Select -ExpandProperty Path )
          foreach ($ngen_exe in $ngen_exe_list){
            & $ngen_exe update
            & $ngen_exe executequeueditems
          }

      - name: Clean up
        shell: bash
        run: |
          Dism.exe -Image:'E:\' -LogPath:"04-cleanup.log" -Cleanup-Image -StartComponentCleanup -ResetBase

      - name: Unregister drive
        run: |
          subst.exe E: /D
          
      - name: Unmount wim
        shell: bash
        run: |
          Dism.exe -Unmount-image -MountDir:'mnt_wim' -LogPath:"05-unmount.log" -Commit
          
      - name: Create esd
        run: |
          Dism.exe -Export-Image -SourceImageFile:"install.wim" -SourceIndex:1 -DestinationImageFile:"install.esd" -Compress:Recovery -CheckIntegrity -LogPath:"05-esd.log"

      - name: Store log files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: |
            *.log
          
      - name: Store esd files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: esd
          path: install.esd
