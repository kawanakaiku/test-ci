name: build_esd

on:
  push:
    branches: [ main ]
    paths:
      - 'build_esd/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v3
      
      - name: Download source
        shell: bash
        run: |
          test -f install.wim && exit || true
          
          python.exe <<'PYTHON'
          from urllib.request import urlopen
          with open('install.wim', 'wb') as f:
            for i in ['aa', 'ab', 'ac', 'ad', 'ae']:
              url = 'https://github.com/kawanakaiku/test-ci/releases/download/win10/Win10_21H2_Japanese_x64.wim_'+i
              print(url)
              part = urlopen(url).read()
              f.write(part)
          PYTHON
          
      - name: Mount wim
        shell: bash
        run: |
          mkdir -p mnt
          Dism.exe -Mount-image -imagefile:install.wim -Index:1 -MountDir:mnt
          
      - name: Update
        shell: bash
        run: |
          true
          
      - name: Optimize
        shell: bash
        run: |
          true

      - name: Unmount wim
        shell: bash
        run: |
          Dism.exe -Commit-Image -MountDir:mnt
          Dism.exe -Unmount-image -MountDir:mnt -Commit
          
      - name: Create esd
        run: |
          Dism.exe -Export-Image -SourceImageFile:install.wim -SourceIndex:1 -DestinationImageFile:install.esd -Compress:Recovery -CheckIntegrity

      - name: Store log files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: |
            **/*.log
          
      - name: Store esd files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: esd
          path: install.esd
