name: build_wine_android

on:
    push:
      branches: [ main ]
      paths:
        - '.github/workflows/build_wine_android.yml'
    workflow_dispatch:

env:
  wine_version: 7.10
  android_api: 26
  android_ndk: android-ndk-r21d
  llvm_mingw: llvm-mingw-20201020-ucrt-ubuntu-18.04
  gradle: gradle-3.5.1
  freetype: freetype-2.10.4
  gmp: gmp-6.2.1
  nettle: nettle-3.6
  gnutls: gnutls-3.7.0
  openldap: openldap-2.4.56
  cups: cups-2.3.3
  gecko: wine-gecko-2.47.2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: prepare
        run: |
          echo "pwd: ${PWD}"
          mkdir ${HOME}/src ${HOME}/build

      - name: prepare android ndk
        run: |
          mkdir tmp ; cd tmp
          wget -nv https://dl.google.com/android/repository/${{ env.android_ndk }}-linux-x86_64.zip -O android_ndk.zip
          unzip -q android_ndk.zip
          mv ${{ env.android_ndk }} ${HOME}
          # echo "CC=${HOME}/${{ env.android_ndk }}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android${{ env.android_api }}-clang" >> $GITHUB_ENV
          cd .. ; rm -r tmp

      - name: prepare llvm mingw
        run: |
          mkdir tmp ; cd tmp
          wget -nv https://github.com/mstorsjo/llvm-mingw/releases/download/20201020/${{ env.llvm_mingw }}.tar.xz -O llvm-mingw.tar.xz
          tar xf llvm-mingw.tar.xz
          mv ${{ env.llvm_mingw }} ${HOME}
          # echo "llvm_mingw_path=${HOME}/${{ env.llvm_mingw }}/bin" >> $GITHUB_ENV
          cd .. ; rm -r tmp

      - name: clone wine source
        run: |
          mkdir tmp ; cd tmp
          wget -nv https://github.com/wine-mirror/wine/archive/refs/tags/wine-${{ env.wine_version }}.tar.gz -O wine.tar.xz
          tar xf wine.tar.xz
          mv wine-wine-${{ env.wine_version }} ${HOME}/src/wine
          cd .. ; rm -r tmp

      - name: prepare wine tools
        run: |
          mkdir ${HOME}/wine-tools ; cd ${HOME}/wine-tools
          ${HOME}/src/wine/configure --without-x --enable-win64
          make -j2 __tooldeps__

      - name: set env
        run: |
          echo "CC=${HOME}/${{ env.android_ndk }}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android${{ env.android_api }}-clang" >> $GITHUB_ENV
          echo "PATH=${HOME}/${{ env.llvm_mingw }}/bin:${PATH}" >> $GITHUB_ENV

      - name: clone freetype source
        run: |
          mkdir tmp ; cd tmp
          wget -nv http://download.savannah.gnu.org/releases/freetype/${{ env.freetype }}.tar.xz -O freetype.tar.xz
          tar xf wine.tar.xz
          mv ${{ env.freetype }} ${HOME}/src/freetype
          cd .. ; rm -r tmp

      - name: build freetype
        run: |
          mkdir ${HOME}/build/freetype ; cd ${HOME}/build/freetype
          ${HOME}/src/freetype/configure --without-png
          make -j2

      - name: clone gmp source
        run: |
          mkdir tmp ; cd tmp
          wget -nv https://gmplib.org/download/gmp/${{ env.gmp }}.tar.xz -O gmp.tar.xz
          tar xf gmp.tar.xz
          mv ${{ env.gmp }} ${HOME}/src/gmp
          cd .. ; rm -r tmp

      - name: build gmp
        run: |
          mkdir ${HOME}/build/gmp ; cd ${HOME}/build/gmp
          ${HOME}/src/gmp/configure --disable-static
          make -j2

      - name: clone nettle source
        run: |
          mkdir tmp ; cd tmp
          wget -nv https://ftp.gnu.org/gnu/nettle/${{ env.nettle }}.tar.gz -O nettle.tar.gz
          tar xf nettle.tar.gz
          mv ${{ env.nettle }} ${HOME}/src/nettle
          cd .. ; rm -r tmp

      - name: build nettle
        run: |
          mkdir ${HOME}/build/nettle ; cd ${HOME}/build/nettle
          ${HOME}/src/nettle/configure --disable-shared --disable-documentation CPPFLAGS=-I${HOME}/build/gmp LDFLAGS=-L${HOME}/build/gmp/.libs
          make -j2

      - name: clone gnutls source
        run: |
          mkdir tmp ; cd tmp
          version=v$(expr ${{ env.gnutls }} : '.*-\([0-9]\+\.[0-9]\+\)')
          wget -nv https://www.gnupg.org/ftp/gcrypt/gnutls/${version}/${{ env.gnutls }}.tar.xz -O gnutls.tar.xz
          tar xf gnutls.tar.gz
          mv ${{ env.gnutls }} ${HOME}/src/gnutls
          cd .. ; rm -r tmp

      - name: build gnutls
        run: |
          mkdir ${HOME}/build/gnutls ; cd ${HOME}/build/gnutls
          ${HOME}/src/gnutls/configure --without-p11-kit --without-idn --with-included-libtasn1 --with-included-unistring -disable-cxx \
            --disable-maintainer-mode --disable-static --disable-doc --disable-tools --disable-tests \
            PKG_CONFIG=true \
            GMP_CFLAGS="-I${HOME}/build/gmp -L${HOME}/build/gmp/.libs -lgmp" GMP_LIBS=${HOME}/build/gmp/.libs/libgmp.so \
            NETTLE_CFLAGS=-I${HOME}/build/nettle NETTLE_LIBS="-L${HOME}/build/nettle -lnettle" \
            HOGWEED_CFLAGS=-I${HOME}/build/nettle HOGWEED_LIBS="-L${HOME}/build/nettle -lhogweed -lnettle ${HOME}/build/gmp/.libs/libgmp.so"
          make -j2

      - name: archive log files
        if: always()
        run: |
          find ${HOME} -type f -iname '*.log' -print0 2>/dev/null | xargs -0 --no-run-if-empty 7z a -mx=9 logs.7z

      - name: archive
        if: always()
        run: |
          7z a -mx=9 build.7z build

      - name: Store log file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: logs.7z

      - name: Store built file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build.7z
          
