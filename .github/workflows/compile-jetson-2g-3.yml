name: compile-jetson-2g-3

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/compile-jetson-2g-3.yml'
      - 'compile-jetson-2g/**'
  workflow_dispatch:

env:
  dir: compile-jetson-2g
  revision: 1

jobs:
  build1:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Download base image
        run: |
          bash ${{ env.dir }}/timer_init.sh
          bash ${{ env.dir }}/01-Download.sh

      - name: Extract base image
        run: |
          bash ${{ env.dir }}/02-Extract.sh

      - name: Install QEMU
        run: |
          bash ${{ env.dir }}/03-InstallQEMU.sh

      - name: Mount
        run: |
          bash ${{ env.dir }}/04-Mount.sh

      - name: Settings
        run: |
          bash ${{ env.dir }}/05-Settings.sh

      - name: Install packages
        run: |
          bash ${{ env.dir }}/06-InstallDepedencies.sh

      - name: Cache build 0
        uses: actions/cache@v3
        with:
          path: ./src_upper.tar
          key: 3_4d967340d2bec314ee71954d86abbc8ec118f84d

      - name: Cache build 1
        uses: actions/cache@v3
        with:
          path: ./src_upper.tar
          key: 1_${{ github.sha }}

      - name: Extract build cache
        run: test -f src_upper.tar && sudo tar xf src_upper.tar || true

      - name: Clone source code
        run: |
          bash ${{ env.dir }}/07-Clone.sh

      - name: Install pip
        run: |
          bash ${{ env.dir }}/08-Installpip.sh

      - name: Cross compile
        run: |
          bash ${{ env.dir }}/timer_main.sh bash ${{ env.dir }}/09-Compile.sh

      - name: Unmount
        if: always()
        run: |
          bash ${{ env.dir }}/11-Umount.sh

      - name: Tar build cache
        if: always()
        run: sudo tar cf src_upper.tar src_upper && ls -lha

  build2:
    runs-on: ubuntu-22.04
    needs: [build1]

    steps:
      - uses: actions/checkout@v3

      - name: Download base image
        run: |
          bash ${{ env.dir }}/timer_init.sh
          bash ${{ env.dir }}/01-Download.sh

      - name: Extract base image
        run: |
          bash ${{ env.dir }}/02-Extract.sh

      - name: Install QEMU
        run: |
          bash ${{ env.dir }}/03-InstallQEMU.sh

      - name: Mount
        run: |
          bash ${{ env.dir }}/04-Mount.sh

      - name: Settings
        run: |
          bash ${{ env.dir }}/05-Settings.sh

      - name: Install packages
        run: |
          bash ${{ env.dir }}/06-InstallDepedencies.sh

      - name: Cache build 1
        uses: actions/cache@v3
        with:
          path: ./src_upper.tar
          key: 1_${{ github.sha }}

      - name: Cache build 2
        uses: actions/cache@v3
        with:
          path: ./src_upper.tar
          key: 2_${{ github.sha }}

      - name: Extract build cache
        run: test -f src_upper.tar && sudo tar xf src_upper.tar || true

      - name: Clone source code
        run: |
          bash ${{ env.dir }}/07-Clone.sh

      - name: Install pip
        run: |
          bash ${{ env.dir }}/08-Installpip.sh

      - name: Cross compile
        run: |
          bash ${{ env.dir }}/timer_main.sh bash ${{ env.dir }}/09-Compile.sh

      - name: Unmount
        if: always()
        run: |
          bash ${{ env.dir }}/11-Umount.sh

      - name: Tar build cache
        if: always()
        run: sudo tar cf src_upper.tar src_upper && ls -lha

  build3:
    runs-on: ubuntu-22.04
    needs: [build1, build2]

    steps:
      - uses: actions/checkout@v3

      - name: Download base image
        run: |
          bash ${{ env.dir }}/timer_init.sh
          bash ${{ env.dir }}/01-Download.sh

      - name: Extract base image
        run: |
          bash ${{ env.dir }}/02-Extract.sh

      - name: Install QEMU
        run: |
          bash ${{ env.dir }}/03-InstallQEMU.sh

      - name: Mount
        run: |
          bash ${{ env.dir }}/04-Mount.sh

      - name: Settings
        run: |
          bash ${{ env.dir }}/05-Settings.sh

      - name: Install packages
        run: |
          bash ${{ env.dir }}/06-InstallDepedencies.sh

      - name: Cache build 2
        uses: actions/cache@v3
        with:
          path: ./src_upper.tar
          key: 2_${{ github.sha }}

      - name: Cache build 3
        uses: actions/cache@v3
        with:
          path: ./src_upper.tar
          key: 3_${{ github.sha }}

      - name: Extract build cache
        run: test -f src_upper.tar && sudo tar xf src_upper.tar || true

      - name: Clone source code
        run: |
          bash ${{ env.dir }}/07-Clone.sh

      - name: Install pip
        run: |
          bash ${{ env.dir }}/08-Installpip.sh

      - name: Cross compile
        run: |
          bash ${{ env.dir }}/timer_main.sh bash ${{ env.dir }}/09-Compile.sh

      - name: Unmount
        if: always()
        run: |
          bash ${{ env.dir }}/11-Umount.sh

      - name: Tar build cache
        if: always()
        run: sudo tar cf src_upper.tar src_upper && ls -lha

  build4:
    runs-on: ubuntu-22.04
    needs: [build1, build2, build3]

    steps:
      - uses: actions/checkout@v3

      - name: Download base image
        run: |
          bash ${{ env.dir }}/timer_init.sh
          bash ${{ env.dir }}/01-Download.sh

      - name: Extract base image
        run: |
          bash ${{ env.dir }}/02-Extract.sh

      - name: Install QEMU
        run: |
          bash ${{ env.dir }}/03-InstallQEMU.sh

      - name: Mount
        run: |
          bash ${{ env.dir }}/04-Mount.sh

      - name: Settings
        run: |
          bash ${{ env.dir }}/05-Settings.sh

      - name: Install packages
        run: |
          bash ${{ env.dir }}/06-InstallDepedencies.sh

      - name: Cache build 3
        uses: actions/cache@v3
        with:
          path: ./src_upper.tar
          key: 3_${{ github.sha }}

      - name: Cache build 4
        uses: actions/cache@v3
        with:
          path: ./src_upper.tar
          key: 4_${{ github.sha }}

      - name: Extract build cache
        run: test -f src_upper.tar && sudo tar xf src_upper.tar || true

      - name: Clone source code
        run: |
          bash ${{ env.dir }}/07-Clone.sh

      - name: Install pip
        run: |
          bash ${{ env.dir }}/08-Installpip.sh

      - name: Cross compile
        run: |
          bash ${{ env.dir }}/timer_main.sh bash ${{ env.dir }}/09-Compile.sh

      - name: Collect built file
        if: always()
        run: |
          bash ${{ env.dir }}/10-Collect.sh

      - name: Unmount
        if: always()
        run: |
          bash ${{ env.dir }}/11-Umount.sh

      - name: Tar build cache
        if: always()
        run: sudo tar cf src_upper.tar src_upper && ls -lha

      - name: Store built file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: built-artifact
          path: build
