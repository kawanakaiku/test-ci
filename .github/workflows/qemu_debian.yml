name: qemu_debian

on:
    push:
      branches: [ main ]
      paths:
        - 'qemu_debian/**'
        - '.github/workflows/qemu_debian.yml'
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
  
    steps:
      - uses: actions/checkout@v3

      - name: get storage info
        run: |
            free -h
            df -h
            
      - name: Run a multi-line script
        run: |
            echo "path-exclude=/usr/share/man/*" | sudo tee /etc/dpkg/dpkg.cfg.d/01_nodoc
            sudo apt-get install -y --no-install-recommends qemu-utils libguestfs-tools mmdebstrap
            # wget -nc -nv https://github.com/kawanakaiku/test-ci/releases/download/files/edk2-x86_64-code.fd
            # wget -nc -nv https://github.com/kawanakaiku/test-ci/releases/download/archlinux/archlinux-2022.06.01-x86_64.iso
            qemu-img create -f qcow2 qemu_debian.img 32G
            # python3 qemu_arch/build.py
            # sudo virt-sparsify qemu_debian.img --convert qcow2 qemu_debian2.img && mv qemu_debian2.img qemu_debian.img
            
            sudo modprobe nbd max_part=63
            sudo qemu-nbd -c /dev/nbd0 qemu_debian.img
            echo -n 'g,n,,,+100M,t,1,n,,,,w,' | sed -e 's/,/\n/g' | sudo fdisk /dev/nbd0
            lsblk

            sudo mkfs.fat -F 32 /dev/nbd0p1
            sudo mkfs.ext4 -O ^has_journal /dev/nbd0p2
            UUID_EFI=`sudo blkid /dev/nbd0p1 | perl -n -e'/UUID="(.*?)"/ && print $1'`
            UUID_ROOT=`sudo blkid /dev/nbd0p2 | perl -n -e'/UUID="(.*?)"/ && print $1'`
            echo "UUID_EFI=${UUID_EFI}"
            echo "UUID_ROOT=${UUID_ROOT}"
            sudo mount -t ext4 -o noatime,nobarrier /dev/nbd0p2 /mnt

            sudo mmdebstrap --components="main restricted universe multiverse" --variant=essential --architecture=amd64 --include=linux-image-generic,grub-efi-amd64 jammy /mnt http://azure.archive.ubuntu.com/ubuntu
            echo -e "UUID=${UUID_ROOT} / ext4 noatime,nobarrier 0 0\nUUID=${UUID_EFI} /boot/efi vfat noatime 0 0" | sudo tee -a /mnt/etc/fstab
            sudo mount -t vfat -o noatime /dev/nbd0p1 /mnt/boot/efi
            sudo chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=grub
            cat /mnt/boot/grub/grub.cfg
            sudo grub-mkconfig -o /boot/grub/grub.cfg
            
            df -h
            sudo sync
            sudo umount /mnt/var/cache /mnt/boot/efi /mnt

            sudo qemu-nbd --disconnect /dev/nbd0 
            sudo killall --wait qemu-nbd || true
            # sudo modprobe -r nbd
            7z a -mx=9 qemu_debian.img.7z qemu_debian.img
            
      - name: Store 7z files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: debian_img
          path: qemu_debian.img.7z
