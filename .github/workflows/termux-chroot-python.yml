name: termux-chroot-python

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/termux-chroot-python.yml'
  workflow_dispatch:
    
env:
  TERMUX_PREFIX: /data/data/com.termux/files/usr
  TERMUX_HOME: /data/data/com.termux/files/home
  PIP_DISABLE_PIP_VERSION_CHECK: 1
 
jobs:
  build:
    runs-on: ubuntu-22.04
  
    steps:
      - name: get termux
        run: |
          mkdir termux-root
          wget -nv https://github.com/kawanakaiku/test-ci/releases/download/chroot-termux/termux-aarch64.tar.xz
          tar xf termux-aarch64.tar.xz -C termux-root
          
      - name: apt
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends qemu-user-static
          
      - name: chroot termux
        run: |
          cd termux-root
          mkdir -p proc dev dev/pts sys
          
          sudo mount -t proc proc proc
          sudo mount -t devtmpfs udev dev
          sudo mount -t devpts devpts dev/pts
          sudo mount -t sysfs sysfs sys
          
          sudo cp /usr/bin/qemu-arm-static data/data/com.termux/files/usr/bin
          
          # set host file
          mkdir -p system/etc
          for host in pypi.python.org files.pythonhosted.org pypi.org; do
            echo $( nslookup $host | awk '/^Address: / { print $2; exit }' ) " $host" >> system/etc/hosts
          done
          
          cat <<SH > /tmp/chroot
          #!/usr/bin/sh
          sudo chroot ${PWD} ${TERMUX_PREFIX}/bin/env \
            PATH=${TERMUX_PREFIX}/bin \
            PIP_DISABLE_PIP_VERSION_CHECK=1 \
            "\$@"
          SH
          chmod +x /tmp/chroot
          
          /tmp/chroot uname -a
          /tmp/chroot python3 -m pip list
          
      - name: clone
        run: |
          mkdir termux-root/python
          cd termux-root/python
          mkdir torch
          wget -nv https://github.com/pytorch/pytorch/releases/download/v1.12.1/pytorch-v1.12.1.tar.gz
          tar xf pytorch-v1.12.1.tar.gz --strip-components=1 -C torch
          
          python3 -m pip download -d src --no-binary :all: -r torch/requirements.txt  # saves in src folder
          mkdir src_dirs
          cd src_dirs
          for f in ../src/*; do
            case $f in
              *.tar.* ) tar xf "$f" ;;
              *.zip ) unzip -q "$f" ;;
              * ) echo unknown archive "$f" ;;
            esac
          done
          # already installed
          rm -rf numpy-*
          
          # ERROR: No matching distribution found for setuptools
          #rm -v */pyproject.toml
          
      - name: build
        run: |
          cd termux-root
          /tmp/chroot bash <<CHROOT
          cd /python
          python3 -m pip wheel src_dirs/*  # tar.gz files
          python3 -m pip install *.whl
          BUILD_TEST=0 python3 -m pip -v wheel torch/
          CHROOT
  
      - name: store
        uses: actions/upload-artifact@v3
        with:
          name: built
          path: termux-root/python/*.whl
