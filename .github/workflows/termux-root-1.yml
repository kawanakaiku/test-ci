name: termux-root-1
on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/termux-root-1.yml'
  workflow_dispatch:
env:
  TERMUX_ARCH: aarch64
  VERSION: 30_r01
  LPUNPACK: otatools/bin/lpunpack
  PIP_DISABLE_PIP_VERSION_CHECK: 1
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: download system.img
        run: |
          ABI=$(
            case $TERMUX_ARCH in
              aarch64) echo arm64-v8a;;
              arm) echo armeabi-v7a;;
              i686) echo x86;;
              x86_64) echo x86_64;;
            esac
          )
          wget -nv https://dl.google.com/android/repository/sys-img/android/${ABI}-${VERSION}.zip -O system.zip
          7z e system.zip ${ABI}/system.img
          7z e system.img super.img
      - name: download lpunpack
        run: |
          python -m pip install -U gdown
          python -m gdown.cli 1h4sGXNI1Al5Y_Te9T8xMWrp3mHw1tke- -O otatools.zip
          unzip -q otatools.zip
          chmod u+x ${LPUNPACK}
      - name: extract system
        run: |
          mkdir super
          ${LPUNPACK} --slot=0 super.img super
          7z x super/system.img -osystem
      - name: extract apex
        run: |
          cd system/system/apex
          ls
          rm -f *.capex
          mkfifo apex_payload.img
          for APEX in *.apex; do
            NAME=${APEX%.*}
            7z x apex_payload.img -o${NAME} &
            7z e ${APEX} apex_payload.img
          done
          rm *.apex apex_payload.img
      - name: link
        run: |
          cd system
          rm -r apex
          ln -s /system/apex apex
      - name: archive
        run: |
          tar -c -I 'xz -9 -T0' -f ../system.tar.xz system
      - name: store
        uses: actions/upload-artifact@v3
        with:
          name: ${TERMUX_ARCH}-${VERSION}
          path: system.tar.xz
