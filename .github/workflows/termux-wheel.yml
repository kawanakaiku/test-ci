name: termux-wheel

on:
    push:
      branches: [ main ]
      paths:
        - '.github/workflows/termux-wheel.yml'
    workflow_dispatch:
 
jobs:
  build:
    runs-on: ubuntu-22.04
  
    steps:
      - uses: actions/checkout@v3
          
      - name: setup termux python
        run: |
          wget -nc -nv \
            https://packages-cf.termux.org/apt/termux-main/pool/main/p/python/python_3.10.5_aarch64.deb \
            https://packages-cf.termux.org/apt/termux-main/pool/main/liba/libandroid-support/libandroid-support_28-2_aarch64.deb \
            https://packages-cf.termux.dev/apt/termux-main/pool/main/n/ndk-sysroot/ndk-sysroot_23c_aarch64.deb
          for deb in *.deb ; do
            ar x ${deb} data.tar.xz
            sudo tar -xf data.tar.xz --no-overwrite-dir -C /
            rm data.tar.xz ${deb}
          done
      - name: setup NDK
        run: |
          sudo ln -s ${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android{24,}-clang
          sudo ln -s ${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android{24,}-clang++
          
          # with gfortran
          wget -nc -nv https://github.com/mzakharo/android-gfortran/releases/download/r21e/gcc-arm64-linux-x86_64.tar.bz2
          sudo mkdir /gcc-aarch64
          sudo tar xf gcc-arm64-linux-x86_64.tar.bz2 -C /gcc-aarch64 --strip-components=1
          
      - name: setup crossenv
        run: |
          export PATH="${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH}"
          #export PATH="/gcc-aarch64/bin:${PATH}"

          python3.10 -m pip install crossenv
          python3.10 -m crossenv /data/data/com.termux/files/usr/bin/python3.10 venv
          
          . venv/bin/activate
          
          cross-pip install pip wheel setuptools
          build-pip install pip wheel setuptools cmake Cython
           
      - name: build
        run: |
          export PATH="${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin:${PATH}"
          #export PATH="/gcc-aarch64/bin:${PATH}"
          
          #export CFLAGS="-I/data/data/com.termux/files/usr/include"
          #export CFLAGS+=" -I${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/include/aarch64-linux-android"
          export LDFLAGS="-s -L/data/data/com.termux/files/usr/lib"
          
          # for numpy
          export MATHLIB=m
          
          # for pandas
          # export CFLAGS+=" -Wno-deprecated-declarations -Wno-unreachable-code"
          
          # for fortran source
          export F77=/gcc-aarch64/bin/aarch64-linux-android-gfortran
          export F90=/gcc-aarch64/bin/aarch64-linux-android-gfortran
          
          . venv/bin/activate
          
          mkdir -p build
          cd build
          
          #build-pip install numpy
          cross-pip wheel --no-binary :all: numpy
                    
      - name: files
        run: |
          ls -lha build

      - name: store built file
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
          
